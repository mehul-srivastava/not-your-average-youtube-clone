// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id
  name     String
  email    String
  imageUrl String

  livestreams   LiveStream[]
  videos        Video[]
  comments      Comment[]
  ratings       Rating[]
  subscribers   User[]       @relation("UserSubs")
  subscriptions User[]       @relation("UserSubs")
}

model Video {
  id           String    @id @default(cuid())
  manifestFile String
  title        String
  description  String
  thumbnail    String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  comments     Comment[]
  ratings      Rating[]

  userId String
  user   User   @relation(references: [id], fields: [userId])
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())

  userId  String
  videoId String
  video   Video  @relation(references: [id], fields: [videoId])
  user    User   @relation(references: [id], fields: [userId])
}

model Rating {
  id       Int @id @default(autoincrement())
  likes    Int @default(0)
  dislikes Int @default(0)

  userId  String
  videoId String
  video   Video  @relation(references: [id], fields: [videoId])
  user    User   @relation(references: [id], fields: [userId])
}

model LiveStream {
  id            String   @id @default(uuid())
  rtmpSecretKey String
  thumbnail     String?
  title         String
  description   String
  isFinished    Boolean  @default(false)
  createdAt     DateTime @default(now())

  userId String?
  user   User?   @relation(references: [id], fields: [userId])
}
